# Mission:
This programme will read an Apache log file and produce a summary of IP addresses that generated errors.

### Listing Inputs & Outputs

## Inputs:
* Data from a file (An Apache `access.log` file).
* What format is it in? (Plain text, one entry per line).
* Where does it come from? (The user will provide the file path).

## Outputs:
* What is the final product? (A printed summary on the console/newly generated results file).
* What does it look like?:
--- Error Report ---
IP Address: 180.76.15.131 --- Error Count: 45
IP Address: 123.45.67.89 --- Error Count: 21
IP Address: 98.76.54.32 --- Error Count: 8
--------------------


## The Steps in Plain English
1. Ask the user for the name of the log file. ✅
2. Create an empty dictionary to store the bad IPs and their counts. ✅
3. Open the specified log file. ✅
4. Read the file one line at a time. ✅
5. For each line, use a regular expression to extract the IP address and the HTTP status code. ✅
6. Check if the status code is an error (starts with '4'', like 404). ✅
7. If it is an error:
* Check if the IP is already in the dictionary. ✅
* If yes, add 1 to its count. ✅
* If no, add it to the dictionary with a count of 1. ✅
8. After the whole file is read, close it. ✅
9. Print a header for the report. ✅
10. Loop through the dictionary and print each IP and its final count. ✅
11. Print a footer for the report. ✅


## Typical Apache Access Log File:
<IP> <ident> <user> [<timestamp>] "<method> <path> <protocol>" <status> <bytes> "<referrer>" "<user-agent>"


## Application Advancements:
Adding command-line arguments to make it a command-line tool:
1. Import argparse library.
2. Create a parser object (an empty container that will hold the rules for the command-line arguments).
3. Add a rule to the container:
* Expect an argument called `--file`. It is required and should come with a help message explaining it.
4. Tell the parser to look at the command line and grab the arguments the user actually typed.
5. Pass the filename that the user provided to our `parse_apache_file()` function.